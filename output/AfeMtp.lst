C51 COMPILER V9.52.0.0   AFEMTP                                                            10/24/2019 11:21:04 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE AFEMTP
OBJECT MODULE PLACED IN .\output\AfeMtp.obj
COMPILER INVOKED BY: C:\Program Files (x86)\keil 51\C51\BIN\C51.EXE code\AfeMtp.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(
                    -.\header;.\roidmi\inc) DEBUG OBJECTEXTEND PRINT(.\output\AfeMtp.lst) TABS(2) OBJECT(.\output\AfeMtp.obj)

line level    source

   1          /********************************************************************************
   2          Copyright (C), Sinowealth Electronic. Ltd.
   3          Author:   andyliu
   4          Version:  V0.0
   5          Date:     2014/05/30
   6          History:
   7            V0.0    2014/08/28     Preliminary
   8          ********************************************************************************/
   9          #include "System.h"
  10          #include "AfeMtp.h"
  11          
  12          
  13          /*******************************************************************************
  14          Function:TWIWriteAFE(U8 WrAddr, U8 xdata *WrBuf) 
  15          Description:  
  16          Input:    
  17          Output: 
  18          Others:
  19          *******************************************************************************/
  20          //目的是为了加强容错处理
  21          //if(!TWIWriteAFE(AFE_INT_EN+i, &REG.AFEINTEN+i)) //0x03+i  中断地址+i
  22          bit TWIWriteAFE(U8 WrAddr, U8 xdata *WrBuf)         //write only one byte once
  23          {
  24   1          BOOL result = 0;              
  25   1          U8 times = 0;
  26   1      
  27   1          while(times++ < TRY_TIMES)
  28   1          {
  29   2            //从机固定地址 0011 011x是0写操作
  30   2            //AFE_CHIP_ID = 1b<<1  
  31   2            result = TwiWrite(AFE_CHIP_ID, WrAddr, 1, WrBuf);
  32   2            if(result)
  33   2            {
  34   3              break;
  35   3            }
  36   2            else
  37   2            {
  38   3              Delay1ms(1);
  39   3              //Delay1ms(2);
  40   3            }
  41   2          }
  42   1          
  43   1          return  result;
  44   1      }
  45          
  46          
  47          /*******************************************************************************
  48          Function:TWIReadAFE(U8 RdAddr, U8 xdata *RdBuf) 
  49          Description:  
  50          Input:    
  51          Output: 
  52          Others:
  53          *******************************************************************************/
  54          bit TWIReadAFE(U8 RdAddr, U8 xdata *RdBuf)    //读AFE
C51 COMPILER V9.52.0.0   AFEMTP                                                            10/24/2019 11:21:04 PAGE 2   

  55          {
  56   1          BOOL result = 0;              
  57   1          U8 times = 0;
  58   1      
  59   1          while(times++ < TRY_TIMES)          //如果读数出错，则Try 5次
  60   1          {
  61   2          result = TwiRead(AFE_CHIP_ID, RdAddr, 2, RdBuf);  //读取数据长度固定为2Bytes
  62   2          if(result)                //如果读数成功且CRC校验正确，则退出循环返回成功标标志
  63   2          {
  64   3            break;
  65   3          }
  66   2          else                  //如果TWI读数或CRC校验失败，则延时1mS之后再读取
  67   2          {
  68   3            Delay1ms(1);
  69   3          }
  70   2          }
  71   1          
  72   1          return  result;
  73   1      }
  74          
  75          
  76          /*******************************************************************************
  77          Function:ClearAFEFlg(void) 
  78          Description:  
  79          Input:  NULL  
  80          Output: NULL
  81          Others:
  82          *******************************************************************************/
  83          void ClearAFEFlg(void)
  84          {
  85   1        TWIReadAFE(AFE_FLAG1, &REG.AFEFLAG1);   //read AFE FLAG1 search for which state  trigged ALARM
  86   1        if((REG.AFEFLAG1!=0) || (REG.AFEFLAG2!=0))  //读取两个flag              
  87   1        {
  88   2              REG.AFESCONF1 |= 0x80;//清除位置1
  89   2              TWIWriteAFE(AFE_SCONF1, &REG.AFESCONF1);
  90   2              REG.AFESCONF1 &= ~0x80;
  91   2              TWIWriteAFE(AFE_SCONF1, &REG.AFESCONF1);
  92   2        }
  93   1      }
  94          
  95          
  96          /*******************************************************************************
  97          Function:InitAFE() 
  98          Description:  
  99          Input:  NULL  
 100          Output: NULL
 101          Others:
 102          *******************************************************************************/
 103          bit InitAFE(void)//把REG表里的数据写入到AFE中
 104          {
 105   1        U8 i;
 106   1        BOOL result=1;
 107   1      #if 0
                  TI = 0;
                  TI = 1; 
                  printf("\n InitAFE \n");    
              #endif
 112   1        
 113   1        for(i=0; i<11; i++)//从AFE_INT_EN地址03h开始的后11位地址
 114   1        {
 115   2          if(!TWIWriteAFE(AFE_INT_EN+i, &REG.AFEINTEN+i)) //0x03+i  中断地址+i
 116   2          {
C51 COMPILER V9.52.0.0   AFEMTP                                                            10/24/2019 11:21:04 PAGE 3   

 117   3              result = 0;
 118   3              //break;
 119   3          }
 120   2        }
 121   1      
 122   1        return result;
 123   1      }
 124          
 125          
 126          /*******************************************************************************
 127          Function:EnableAFEWdtCadc()  
 128          Description:使能CHG&DSG&PCHG输出，且使能WDT和CADC模块
 129          Input:  
 130          Output: 
 131          Others:
 132          *******************************************************************************/
 133          //void EnableAFEWdtCadc(void)
 134          //{
 135          //  ucMTPConfVal |= 0x7c;
 136          //  MTPWrite(MTP_CONF, 1, &ucMTPConfVal);
 137          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    251    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
